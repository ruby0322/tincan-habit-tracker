"use client";
import { generateTinCanImage } from "@/actions/generation";
import { Skeleton } from "@/components/ui/skeleton";
import Image from "next/image";
import { useState } from "react";
import ImageForm from "./image-form";

const ImagePage = () => {
  const [loading, setLoading] = useState<boolean>(false);
  const [responseUrl, setResponseUrl] = useState<string>("");
  const [title, setTitle] = useState<string>("打羽球");
  const [completionStreak, setCompletionStreak] = useState<number>(0);
  const [failureStreak, setFailureStreak] = useState<number>(0);

  const fetchData = async (
    title: string,
    completionStreak: number,
    failureStreak: number
  ) => {
    setLoading(true);
    const response = await generateTinCanImage(
      title,
      completionStreak,
      failureStreak
    );
    setResponseUrl(response);
    setLoading(false);
  };

  return (
    <div className='flex items-center justify-center flex-col gap-8'>
      {loading ? (
        <Skeleton className='h-[256px] w-[256px] rounded' />
      ) : (
        responseUrl && (
          <Image
            height='256'
            width='256'
            src={responseUrl}
            alt='Tin can image generated by DALLE'
          />
        )
      )}

      <ImageForm
        title={title}
        titleSetter={setTitle}
        completionStreak={completionStreak}
        completionStreakSetter={setCompletionStreak}
        failureStreak={failureStreak}
        failureStreakSetter={setFailureStreak}
        onSubmit={() => {
          fetchData(title, completionStreak, failureStreak);
        }}
      />
    </div>
  );
};

export default ImagePage;
